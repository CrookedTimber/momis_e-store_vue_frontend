{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport ProductView from '../views/ProductView.vue';\nimport CategoryView from '../views/CategoryView.vue';\nimport SearchView from '../views/SearchView.vue';\nimport CartView from '../views/CartView.vue';\nimport SignUpView from '../views/SignUpView.vue';\nimport LogInView from '../views/LogInView.vue';\nimport MyAccountView from '../views/MyAccountView.vue';\nimport store from '@/store';\nconst routes = [{\n  path: '/',\n  name: 'home',\n  component: HomeView\n}, {\n  path: '/about',\n  name: 'about',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import( /* webpackChunkName: \"about\" */'../views/AboutView.vue')\n}, {\n  path: '/:category_slug/:product_slug',\n  name: 'Product',\n  component: ProductView\n}, {\n  path: '/:category_slug',\n  name: 'Category',\n  component: CategoryView\n}, {\n  path: '/search',\n  name: 'Search',\n  component: SearchView\n}, {\n  path: '/cart',\n  name: 'Cart',\n  component: CartView\n}, {\n  path: '/sign-up',\n  name: 'SignUp',\n  component: SignUpView\n}, {\n  path: '/log-in',\n  name: 'LogIn',\n  component: LogInView\n}, {\n  path: '/my-account',\n  name: 'MyAccount',\n  component: MyAccountView,\n  meta: {\n    requireLogin: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  if (to.matched.some(record.meta.requireLogin) && !store.state.is) {\n    next({\n      name: 'LogIn',\n      query: {\n        to: to.path\n      }\n    });\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","ProductView","CategoryView","SearchView","CartView","SignUpView","LogInView","MyAccountView","store","routes","path","name","component","meta","requireLogin","router","history","process","env","BASE_URL","beforeEach","to","from","next","matched","some","record","state","is","query"],"sources":["C:/Edgar/Web Development/00_job_seeking/portfolio/E-Commerce/momis_vue_eshop/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport ProductView from '../views/ProductView.vue';\nimport CategoryView from '../views/CategoryView.vue';\nimport SearchView from '../views/SearchView.vue';\nimport CartView from '../views/CartView.vue';\nimport SignUpView from '../views/SignUpView.vue';\nimport LogInView from '../views/LogInView.vue';\nimport MyAccountView from '../views/MyAccountView.vue';\nimport store from '@/store';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n\n    component: HomeView,\n  },\n  {\n    path: '/about',\n    name: 'about',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () =>\n      import(/* webpackChunkName: \"about\" */ '../views/AboutView.vue'),\n  },\n  {\n    path: '/:category_slug/:product_slug',\n    name: 'Product',\n    component: ProductView,\n  },\n  {\n    path: '/:category_slug',\n    name: 'Category',\n    component: CategoryView,\n  },\n  {\n    path: '/search',\n    name: 'Search',\n    component: SearchView,\n  },\n  {\n    path: '/cart',\n    name: 'Cart',\n    component: CartView,\n  },\n  {\n    path: '/sign-up',\n    name: 'SignUp',\n    component: SignUpView,\n  },\n  {\n    path: '/log-in',\n    name: 'LogIn',\n    component: LogInView,\n  },\n  {\n    path: '/my-account',\n    name: 'MyAccount',\n    component: MyAccountView,\n    meta: { requireLogin: true },\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n});\n\nrouter.beforeEach((to, from, next) => {\n  if (to.matched.some(record.meta.requireLogin) && !store.state.is) {\n    next({ name: 'LogIn', query: { to: to.path } });\n  }\n});\n\nexport default router;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,KAAK,MAAM,SAAS;AAE3B,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EAEZC,SAAS,EAAEZ;AACb,CAAC,EACD;EACEU,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACb;EACA;EACA;EACAC,SAAS,EAAE,MACT,MAAM,EAAC,+BAAgC,wBAAwB;AACnE,CAAC,EACD;EACEF,IAAI,EAAE,+BAA+B;EACrCC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAEX;AACb,CAAC,EACD;EACES,IAAI,EAAE,iBAAiB;EACvBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEV;AACb,CAAC,EACD;EACEQ,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAET;AACb,CAAC,EACD;EACEO,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAER;AACb,CAAC,EACD;EACEM,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEP;AACb,CAAC,EACD;EACEK,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEN;AACb,CAAC,EACD;EACEI,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEL,aAAa;EACxBM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,CACF;AAED,MAAMC,MAAM,GAAGjB,YAAY,CAAC;EAC1BkB,OAAO,EAAEjB,gBAAgB,CAACkB,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CV;AACF,CAAC,CAAC;AAEFM,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,IAAIF,EAAE,CAACG,OAAO,CAACC,IAAI,CAACC,MAAM,CAACb,IAAI,CAACC,YAAY,CAAC,IAAI,CAACN,KAAK,CAACmB,KAAK,CAACC,EAAE,EAAE;IAChEL,IAAI,CAAC;MAAEZ,IAAI,EAAE,OAAO;MAAEkB,KAAK,EAAE;QAAER,EAAE,EAAEA,EAAE,CAACX;MAAK;IAAE,CAAC,CAAC;EACjD;AACF,CAAC,CAAC;AAEF,eAAeK,MAAM"},"metadata":{},"sourceType":"module"}