{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { toast } from 'bulma-toast';\nexport default {\n  name: 'LogIn',\n  data() {\n    return {\n      username: '',\n      password: '',\n      errors: []\n    };\n  },\n  mounted() {\n    document.title = 'Log In | Momis';\n  },\n  methods: {\n    async submitForm() {\n      axios.defaults.headers.common['Authorization'] = '';\n      localStorage.removeItem('token');\n      this.errors = [];\n      if (this.username === '') {\n        this.errors.push('Username is missing');\n      }\n      if (this.password === '') {\n        this.errors.push('Password is missing');\n      }\n      if (!this.errors.length) {\n        const formData = {\n          username: this.username,\n          password: this.password\n        };\n        await axios.post(\"/api/v1/token/login/\", formData).then(response => {\n          const token = response.data.auth_token;\n          this.$store.commit('setToken', token);\n          axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token;\n          localStorage.setItem(\"token\", token);\n          const toPath = this.$route.query.to || '/cart';\n          this.$router.push(toPath);\n        }).catch(error => {\n          if (error.response) {\n            for (const property in error.response.data) {\n              this.errors.push(`${property}: ${error.response.data[property]}`);\n            }\n          } else {\n            this.errors.push('Something went wrong. Please try again');\n            console.log(JSON.stringify(error));\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAqCA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,KAAI,QAAS,aAAa;AAEnC,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAO,GAAG;IACRC,QAAQ,CAACC,KAAI,GAAI,gBAAgB;EACnC,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAU,GAAG;MACjBX,KAAK,CAACY,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,IAAI,EAAE;MACnDC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;MAChC,IAAI,CAACV,MAAK,GAAI,EAAE;MAEhB,IAAI,IAAI,CAACF,QAAO,KAAM,EAAE,EAAE;QACxB,IAAI,CAACE,MAAM,CAACW,IAAI,CAAC,qBAAqB,CAAC;MACzC;MACA,IAAI,IAAI,CAACZ,QAAO,KAAM,EAAE,EAAE;QACxB,IAAI,CAACC,MAAM,CAACW,IAAI,CAAC,qBAAqB,CAAC;MACzC;MACA,IAAI,CAAC,IAAI,CAACX,MAAM,CAACY,MAAM,EAAE;QACvB,MAAMC,QAAO,GAAI;UACff,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC;QACD,MAAML,KAAI,CACDoB,IAAI,CAAC,sBAAsB,EAAED,QAAQ,EACrCE,IAAI,CAACC,QAAO,IAAK;UACd,MAAMC,KAAI,GAAID,QAAQ,CAACnB,IAAI,CAACqB,UAAS;UACrC,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,UAAU,EAAEH,KAAK;UAEpCvB,KAAK,CAACY,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,IAAI,QAAO,GAAIS,KAAI;UAChER,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEJ,KAAK;UACnC,MAAMK,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,EAAC,IAAK,OAAM;UAC7C,IAAI,CAACC,OAAO,CAACf,IAAI,CAACW,MAAM;QAC5B,CAAC,EACAK,KAAK,CAACC,KAAI,IAAK;UACZ,IAAIA,KAAK,CAACZ,QAAQ,EAAE;YAChB,KAAK,MAAMa,QAAO,IAAKD,KAAK,CAACZ,QAAQ,CAACnB,IAAI,EAAE;cACxC,IAAI,CAACG,MAAM,CAACW,IAAI,CAAE,GAAEkB,QAAS,KAAID,KAAK,CAACZ,QAAQ,CAACnB,IAAI,CAACgC,QAAQ,CAAE,EAAC;YACpE;UACJ,OAAO;YACH,IAAI,CAAC7B,MAAM,CAACW,IAAI,CAAC,wCAAwC;YAEzDmB,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACL,KAAK,CAAC;UACrC;QACJ,CAAC;MACX;IACF;EACF;AACF,CAAC","names":["axios","toast","name","data","username","password","errors","mounted","document","title","methods","submitForm","defaults","headers","common","localStorage","removeItem","push","length","formData","post","then","response","token","auth_token","$store","commit","setItem","toPath","$route","query","to","$router","catch","error","property","console","log","JSON","stringify"],"sourceRoot":"","sources":["C:\\Edgar\\Web Development\\00_job_seeking\\portfolio\\E-Commerce\\momis_vue_eshop\\src\\views\\LogInView.vue"],"sourcesContent":["<template>\r\n  <div class=\"page-log-in\">\r\n    <div class=\"columns\">\r\n      <div class=\"column is-4 is-offset-4\">\r\n        <h1 class=\"title\">Log In</h1>\r\n\r\n        <form @submit.prevent=\"submitForm\">\r\n          <div class=\"field\">\r\n            <label>Username</label>\r\n            <div class=\"control\">\r\n              <input type=\"text\" class=\"input\" v-model=\"username\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"field\">\r\n            <label>Password</label>\r\n            <div class=\"control\">\r\n              <input type=\"text\" class=\"input\" v-model=\"password\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"notification is-danger\" v-if=\"errors.length\">\r\n            <p v-for=\"error in errors\" v-bind:key=\"error\">{{ error }}</p>\r\n          </div>\r\n          <div class=\"field\">\r\n            <div class=\"control\">\r\n              <button class=\"button is-dark\">Log in</button>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          Or <Router-link to=\"/sign-up\">click here</Router-link> to sign up!\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { toast } from 'bulma-toast';\r\n\r\nexport default {\r\n  name: 'LogIn',\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      errors: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    document.title = 'Log In | Momis';\r\n  },\r\n  methods: {\r\n    async submitForm() {\r\n      axios.defaults.headers.common['Authorization'] = '';\r\n      localStorage.removeItem('token');\r\n      this.errors = [];\r\n\r\n      if (this.username === '') {\r\n        this.errors.push('Username is missing');\r\n      }\r\n      if (this.password === '') {\r\n        this.errors.push('Password is missing');\r\n      }\r\n      if (!this.errors.length) {\r\n        const formData = {\r\n          username: this.username,\r\n          password: this.password,\r\n        };\r\n        await axios\r\n                .post(\"/api/v1/token/login/\", formData)\r\n                .then(response => {\r\n                    const token = response.data.auth_token\r\n                    this.$store.commit('setToken', token)\r\n                    \r\n                    axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token\r\n                    localStorage.setItem(\"token\", token)\r\n                    const toPath = this.$route.query.to || '/cart'\r\n                    this.$router.push(toPath)\r\n                })\r\n                .catch(error => {\r\n                    if (error.response) {\r\n                        for (const property in error.response.data) {\r\n                            this.errors.push(`${property}: ${error.response.data[property]}`)\r\n                        }\r\n                    } else {\r\n                        this.errors.push('Something went wrong. Please try again')\r\n                        \r\n                        console.log(JSON.stringify(error))\r\n                    }\r\n                })\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}